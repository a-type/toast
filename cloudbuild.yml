steps:
  - name: "gcr.io/cloud-builders/npm"
    id: "Lerna Bootstrap"
    args: ["bootstrap"]
  - name: "gcr.io/cloud-builders/npm"
    id: "Lerna Test"
    entrypoint: "lerna"
    args: ["ci:test"]
  - name: "gcr.io/cloud-builders/npm"
    id: "Lerna Build"
    args: ["ci:build"]
    env:
      - "BUILD_ID=$BUILD_ID"

  # APP
  #=======================================================
  - name: "gcr.io/cloud-builders/docker"
    id: "App Containerize"
    waitFor: ["Lerna Build"]
    args:
      [
        "build",
        "-f",
        ".web.Dockerfile",
        "-t",
        "us.gcr.io/$PROJECT_ID/toast-web:$SHORT_SHA",
        ".",
      ]
    dir: "services"

  - name: "gcr.io/cloud-builders/docker"
    id: "App Push"
    waitFor: ["App Containerize"]
    args: ["push", "us.gcr.io/$PROJECT_ID/toast-web:$SHORT_SHA"]
    dir: "services"

  - name: "gcr.io/cloud-builders/gcloud"
    id: "App Deploy"
    waitFor: ["App Push"]
    args:
      [
        "beta",
        "run",
        "deploy",
        "toast-web",
        "--project",
        "${PROJECT_ID}",
        "--image",
        "us.gcr.io/toast-cooking/toast-web:$SHORT_SHA",
        "--region",
        "us-central1",
        "--allow-unauthenticated",
      ]

  # CORE
  #========================================================
  - name: "gcr.io/cloud-builders/docker"
    id: "Core Containerize"
    waitFor: ["Lerna Build"]
    args:
      [
        "build",
        "-f",
        ".core.Dockerfile",
        "-t",
        "us.gcr.io/$PROJECT_ID/toast-core:$SHORT_SHA",
        ".",
      ]
    dir: "core"

  - name: "gcr.io/cloud-builders/docker"
    id: "Core Push"
    waitFor: ["Core Containerize"]
    args: ["push", "us.gcr.io/$PROJECT_ID/toast-core:$SHORT_SHA"]
    dir: "core"

  - name: "gcr.io/cloud-builders/gcloud"
    id: "Core Deploy"
    waitFor: ["Core Push"]
    args:
      [
        "beta",
        "run",
        "deploy",
        "toast-core",
        "--project",
        "${PROJECT_ID}",
        "--image",
        "us.gcr.io/${PROJECT_ID}/toast-core:$SHORT_SHA",
        "--region",
        "us-central1",
        "--set-env-vars",
        "NEO4J_PASSWORD=berglas://${_BERGLAS_BUCKET_ID}/neo4j-prod-password,NEO4J_BOLT_HOST=${_NEO4J_HOST}",
        "--allow-unauthenticated",
      ]

  # PLANNING
  #========================================================
  - name: "gcr.io/cloud-builders/docker"
    id: "Planning Containerize"
    waitFor: ["Lerna Build"]
    args:
      [
        "build",
        "-f",
        ".planning.Dockerfile",
        "-t",
        "us.gcr.io/$PROJECT_ID/toast-planning:$SHORT_SHA",
        ".",
      ]

  - name: "gcr.io/cloud-builders/docker"
    id: "Planning Push"
    waitFor: ["Planning Containerize"]
    args: ["push", "us.gcr.io/$PROJECT_ID/toast-planning:$SHORT_SHA"]

  - name: "gcr.io/cloud-builders/gcloud"
    id: "Planning Deploy"
    waitFor: ["Planning Push"]
    args:
      [
        "beta",
        "run",
        "deploy",
        "toast-planning",
        "--project",
        "${PROJECT_ID}",
        "--image",
        "us.gcr.io/toast-cooking/toast-planning:$SHORT_SHA",
        "--region",
        "us-central1",
        "--set-env-vars",
        "NEO4J_PASSWORD=berglas://${_BERGLAS_BUCKET_ID}/neo4j-prod-password,NEO4J_BOLT_HOST=${_NEO4J_HOST}",
        "--no-allow-unauthenticated",
      ]

  # SCANNING
  #========================================================
  - name: "gcr.io/cloud-builders/docker"
    id: "Scanning Containerize"
    waitFor: ["Lerna Build"]
    args:
      [
        "build",
        "-f",
        ".scanning.Dockerfile",
        "-t",
        "us.gcr.io/$PROJECT_ID/toast-scanning:$SHORT_SHA",
        ".",
      ]

  - name: "gcr.io/cloud-builders/docker"
    id: "Scanning Push"
    waitFor: ["Scanning Containerize"]
    args: ["push", "us.gcr.io/$PROJECT_ID/toast-scanning:$SHORT_SHA"]

  - name: "gcr.io/cloud-builders/gcloud"
    id: "Scanning Deploy"
    waitFor: ["Scanning Push"]
    args:
      [
        "beta",
        "run",
        "deploy",
        "toast-scanning",
        "--project",
        "${PROJECT_ID}",
        "--image",
        "us.gcr.io/toast-cooking/toast-scanning:$SHORT_SHA",
        "--region",
        "us-central1",
        "--set-env-vars",
        "NEO4J_PASSWORD=berglas://${_BERGLAS_BUCKET_ID}/neo4j-prod-password,NEO4J_BOLT_HOST=${_NEO4J_HOST}",
        "--no-allow-unauthenticated",
      ]

images:
  - "us.gcr.io/$PROJECT_ID/toast-web:$SHORT_SHA"
  - "us.gcr.io/$PROJECT_ID/toast-core:$SHORT_SHA"
  - "us.gcr.io/$PROJECT_ID/toast-planning:$SHORT_SHA"
  - "us.gcr.io/$PROJECT_ID/toast-scanning:$SHORT_SHA"

timeout: 1800s

substitutions:
  _BERGLAS_BUCKET_ID: toast-secrets
  _NEO4J_HOST: bolt://35.211.56.142:7687
