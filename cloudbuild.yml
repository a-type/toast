steps:
  # APP
  #=======================================================
  - name: "gcr.io/cloud-builders/npm"
    id: "App Install"
    args: ["install"]
    dir: "app"

  - name: "gcr.io/cloud-builders/npm"
    id: "App Test"
    waitFor: ["App Install"]
    args: ["run", "test"]
    dir: "app"

  - name: "gcr.io/cloud-builders/npm"
    id: "App Build"
    waitFor: ["App Install"]
    args: ["run", "build"]
    env:
      - "BUILD_ID=$BUILD_ID"
    dir: "app"

  - name: "gcr.io/cloud-builders/docker"
    id: "App Containerize"
    waitFor: ["App Build"]
    args: ["build", "-t", "us.gcr.io/$PROJECT_ID/toast-web:$SHORT_SHA", "."]
    dir: "app"

  - name: "gcr.io/cloud-builders/docker"
    id: "App Push"
    waitFor: ["App Containerize"]
    args: ["push", "us.gcr.io/$PROJECT_ID/toast-web:$SHORT_SHA"]
    dir: "app"

  - name: "gcr.io/cloud-builders/gcloud"
    id: "App Deploy"
    waitFor: ["App Push"]
    args:
      [
        "beta",
        "run",
        "deploy",
        "toast-web",
        "--project",
        "${PROJECT_ID}",
        "--image",
        "us.gcr.io/toast-cooking/toast-web:$SHORT_SHA",
        "--region",
        "us-central1",
        "--allow-unauthenticated",
      ]
    env:
      - "PROJECT_ID=toast-cooking"

  # CORE
  #========================================================
  - name: "gcr.io/cloud-builders/npm"
    id: "Core Install"
    waitFor: ["-"]
    args: ["install"]
    dir: "core"

  - name: "gcr.io/cloud-builders/npm"
    id: "Core Test"
    waitFor: ["Core Install"]
    args: ["run", "test"]
    dir: "core"

  - name: "gcr.io/cloud-builders/docker"
    id: "Core Containerize"
    waitFor: ["Core Test"]
    args: ["build", "-t", "us.gcr.io/$PROJECT_ID/toast-core:$SHORT_SHA", "."]
    dir: "core"

  - name: "gcr.io/cloud-builders/docker"
    id: "Core Push"
    waitFor: ["Core Containerize"]
    args: ["push", "us.gcr.io/$PROJECT_ID/toast-core:$SHORT_SHA"]
    dir: "core"

  - name: "gcr.io/cloud-builders/gcloud"
    id: "Core Deploy"
    waitFor: ["Core Push"]
    args:
      [
        "beta",
        "run",
        "deploy",
        "toast-core",
        "--project",
        "${PROJECT_ID}",
        "--image",
        "us.gcr.io/${PROJECT_ID}/toast-core:$SHORT_SHA",
        "--region",
        "us-central1",
        "--set-env-vars",
        "NEO4J_PASSWORD=berglas://${BERGLAS_BUCKET_ID}/neo4j-prod-password",
        "--allow-unauthenticated",
      ]
    env:
      - "PROJECT_ID=toast-cooking"
      - "BERGLAS_BUCKET_ID=toast-secrets"
  # PLANNING
  #========================================================

  - name: "gcr.io/cloud-builders/npm"
    id: "Planning Install"
    waitFor: ["-"]
    args: ["install"]
    dir: "planning"

  - name: "gcr.io/cloud-builders/npm"
    id: "Planning Test"
    waitFor: ["Planning Install"]
    args: ["run", "test"]
    dir: "planning"

  - name: "gcr.io/cloud-builders/docker"
    id: "Planning Containerize"
    waitFor: ["Planning Test"]
    args:
      ["build", "-t", "us.gcr.io/$PROJECT_ID/toast-planning:$SHORT_SHA", "."]
    dir: "planning"

  - name: "gcr.io/cloud-builders/docker"
    id: "Planning Push"
    waitFor: ["Planning Containerize"]
    args: ["push", "us.gcr.io/$PROJECT_ID/toast-planning:$SHORT_SHA"]
    dir: "planning"

  - name: "gcr.io/cloud-builders/gcloud"
    id: "Planning Deploy"
    waitFor: ["Planning Push"]
    args:
      [
        "beta",
        "run",
        "deploy",
        "toast-planning",
        "--project",
        "${PROJECT_ID}",
        "--image",
        "us.gcr.io/toast-cooking/toast-planning:$SHORT_SHA",
        "--region",
        "us-central1",
        "--set-env-vars",
        "NEO4J_PASSWORD=berglas://${BERGLAS_BUCKET_ID}/neo4j-prod-password",
        "--no-allow-unauthenticated",
      ]
    env:
      - "PROJECT_ID=toast-cooking"
      - "BERGLAS_BUCKET_ID=toast-secrets"

  # SCANNING
  #========================================================

  - name: "gcr.io/cloud-builders/npm"
    id: "Scanning Install"
    waitFor: ["-"]
    args: ["install"]
    dir: "scanning"

  - name: "gcr.io/cloud-builders/npm"
    id: "Scanning Test"
    waitFor: ["Scanning Install"]
    args: ["run", "test"]
    dir: "scanning"

  - name: "gcr.io/cloud-builders/docker"
    id: "Scanning Containerize"
    waitFor: ["Scanning Test"]
    args:
      ["build", "-t", "us.gcr.io/$PROJECT_ID/toast-scanning:$SHORT_SHA", "."]
    dir: "scanning"

  - name: "gcr.io/cloud-builders/docker"
    id: "Scanning Push"
    waitFor: ["Scanning Containerize"]
    args: ["push", "us.gcr.io/$PROJECT_ID/toast-scanning:$SHORT_SHA"]
    dir: "scanning"

  - name: "gcr.io/cloud-builders/gcloud"
    id: "Scanning Deploy"
    waitFor: ["Scanning Push"]
    args:
      [
        "beta",
        "run",
        "deploy",
        "toast-scanning",
        "--project",
        "${PROJECT_ID}",
        "--image",
        "us.gcr.io/toast-cooking/toast-scanning:$SHORT_SHA",
        "--region",
        "us-central1",
        "--set-env-vars",
        "NEO4J_PASSWORD=berglas://${BERGLAS_BUCKET_ID}/neo4j-prod-password",
        "--no-allow-unauthenticated",
      ]
    env:
      - "PROJECT_ID=toast-cooking"
      - "BERGLAS_BUCKET_ID=toast-secrets"

images:
  - "us.gcr.io/$PROJECT_ID/toast-web:$SHORT_SHA"
  - "us.gcr.io/$PROJECT_ID/toast-core:$SHORT_SHA"
  - "us.gcr.io/$PROJECT_ID/toast-planning:$SHORT_SHA"
  - "us.gcr.io/$PROJECT_ID/toast-scanning:$SHORT_SHA"

timeout: 1800s
