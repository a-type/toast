apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "toast-core.fullname" . }}
  labels:
    app: {{ template "toast-core.name" . }}
    chart: {{ template "toast-core.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "toast-core.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "toast-core.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: '{{ .Values.image.repository }}:{{ .Values.image.tag }}'
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: https
              containerPort: {{ .Values.application.port }}
              protocol: TCP
          volumeMounts:
            - name: service-account-secret
              mountPath: /var/secrets/service-account
          env:
            - name: NEO4J_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.creds.secretName }}
                  key: user
            - name: NEO4J_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.creds.secretName }}
                  key: password
            - name: NEO4J_BOLT_HOST
              value: {{ .Values.db.hosts.bolt }}
            - name: JWT_TOKEN_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.application.jwt.secretName }}
                  key: tokenSecret
            - name: PORT
              value: '{{ .Values.application.port }}'
            - name: GCLOUD_MEDIA_BUCKET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.application.storage.bucketNameSecretName }}
                  key: bucket
            - name: GCLOUD_PROJECT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.application.storage.projectIdSecretName }}
                  key: id
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /var/secrets/service-account/key.json
            - name: AUTH0_DOMAIN
              value: '{{ .Values.auth0.domain }}'
            - name: AUTH0_CLIENTID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth0.configSecretName }}
                  key: clientId
            - name: AUTH0_ISSUER
              value: '{{ .Values.auth0.issuer }}'
            - name: AUTH0_AUDIENCE
              value: '{{ .Values.auth0.audience }}'
            - name: AUTH0_API_CLIENTID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth0.configSecretName }}
                  key: apiClientId
            - name: AUTH0_API_CLIENTSECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth0.configSecretName }}
                  key: apiClientSecret
      volumes:
        - name: tls-secret
          secret:
            secretName: {{ .Values.ingress.tls.secretName }}
        - name: service-account-secret
          secret:
            secretName: {{ .Values.application.service.serviceAccountSecretName }}
