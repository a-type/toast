apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "toast-scanning.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "toast-scanning.name" . }}
    helm.sh/chart: {{ include "toast-scanning.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "toast-scanning.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "toast-scanning.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: service-account-secret
              mountPath: /var/secrets/service-account
          env:
            - name: NODE_ENV
              value: 'production'
            - name: NEO4J_USERNAME
              value: neo4j
            - name: NEO4J_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.creds.secretName }}
                  key: neo4j-password
            - name: NEO4J_BOLT_HOST
              value: {{ .Values.db.hosts.bolt }}
            - name: CHROME_ARGS
              value: {{ .Values.chrome.args }}
            - name: CHROME_TIMEOUT
              value: "{{ .Values.chrome.timeout }}"
            - name: GCLOUD_PROJECT_ID
              value: toast-cooking-0
            - name: GCLOUD_IMAGE_BUCKET
              value: "{{ .Values.storage.bucket }}"
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /var/secrets/service-account/key.json
          ports:
            - name: http
              containerPort: 3002
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http
          readinessProbe:
            httpGet:
              path: /ping
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: service-account-secret
          secret:
            secretName: toast-core-service-account
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
