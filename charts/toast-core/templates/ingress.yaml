{{- $fullName := include "toast-core.fullname" . -}}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: "{{ $fullName }}-ingress"
  annotations:
    # make sure the controller redirects (301) to HTTPS
    ingress.kubernetes.io/ssl-redirect: "true"

    nginx.org/hsts: "true"
    nginx.org/hsts-include-subdomains: "true"

    # will check the TLS configuration and make sure that the specified secret:
    # - Exists and contains a valid private/public key pair;
    # - The certificate is not expired;
    # - The certificate covers all domain names specified in the ingress config.
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.global-static-ip-name: {{ .Values.ingress.staticIp }}
    kubernetes.io/ingress.allow-http: "false"
    certmanager.k8s.io/cluster-issuer: letsencrypt-production
    certmanager.k8s.io/acme-challenge-type: dns01
    certmanager.k8s.io/acme-dns01-provider: prod-dns
  labels:
    app: {{ template "toast-core.name" . }}
    chart: {{ template "toast-core.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  rules:
  - host: api.toastcooking.app
    http:
      paths:
        - backend:
            serviceName: toast-core
            servicePort: 80
  - host: toastcooking.app
    http:
      paths:
        - backend:
            serviceName: toast-web
            servicePort: 80
  tls:
  - secretName: "{{ .Values.ingress.tls.secretName }}"
    hosts:
    - 'toastcooking.app'
    - 'api.toastcooking.app'
